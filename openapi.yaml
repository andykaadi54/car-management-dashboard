openapi: 3.0.0
info:
  title: Car Management API
  version: 1.0.0
  description: API for managing cars with authentication
paths:
  /user/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /user/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrationInput"
      responses:
        "200":
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /user/add-admin:
    post:
      summary: Add admin by superadmin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminInput"
      responses:
        "200":
          description: Admin added successfully
  /cars:
    get:
      summary: Get all cars
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Car"
    post:
      summary: Create a new car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
  /cars/{id}:
    get:
      summary: Get a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
    put:
      summary: Update a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarInput"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
    delete:
      summary: Delete a car by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
  /user/current-user:
    get:
      summary: Get current user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: integer
        image:
          type: string
        created_by:
          type: integer
        updated_by:
          type: integer
        deleted_by:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CarInput:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        image:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    RegistrationInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AdminInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        role:
          type: string
